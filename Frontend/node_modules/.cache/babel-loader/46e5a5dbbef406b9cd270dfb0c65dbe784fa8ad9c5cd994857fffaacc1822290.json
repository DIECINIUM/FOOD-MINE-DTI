{"ast":null,"code":"var _jsxFileName = \"/Users/prashantagrawal/Documents/FOOD-DTI/FOOD-MINE-DTI/Frontend/src/pages/UserEdit/UserEditPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { getById, updateUser } from '../../services/userService';\nimport { useParams } from 'react-router-dom';\nimport classes from './userEdit.module.css';\nimport Title from '../../components/Title/Title';\nimport Input from '../../components/Input/Input';\nimport { EMAIL } from '../../constants/patterns';\nimport Button from '../../components/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserEditPage() {\n  _s();\n  var _errors$name, _errors$email, _errors$address;\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    userId\n  } = useParams();\n  const isEditMode = Boolean(userId);\n  useEffect(() => {\n    if (isEditMode) loadUser();\n  }, [userId]);\n  const loadUser = async () => {\n    const user = await getById(userId);\n    reset(user);\n  };\n  const submit = async userData => {\n    await updateUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: isEditMode ? 'Edit User' : 'Add User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submit),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Name\",\n          ...register('name', {\n            required: 'Name is required',\n            minLength: 3\n          }),\n          error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Email\",\n          ...register('email', {\n            required: 'Email is required',\n            pattern: EMAIL\n          }),\n          error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Address\",\n          ...register('address', {\n            required: 'Address is required',\n            minLength: 5\n          }),\n          error: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Is Admin\",\n          type: \"checkbox\",\n          ...register('isAdmin')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          text: isEditMode ? \"Update User\" : \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(UserEditPage, \"dXbQST3ylSPR5kV6vuCnZGlmVpw=\", false, function () {\n  return [useForm, useParams];\n});\n_c = UserEditPage;\nvar _c;\n$RefreshReg$(_c, \"UserEditPage\");","map":{"version":3,"names":["React","useEffect","useForm","getById","updateUser","useParams","classes","Title","Input","EMAIL","Button","jsxDEV","_jsxDEV","UserEditPage","_s","_errors$name","_errors$email","_errors$address","register","reset","handleSubmit","formState","errors","userId","isEditMode","Boolean","loadUser","user","submit","userData","className","container","children","content","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","label","required","minLength","error","name","message","pattern","email","address","type","text","_c","$RefreshReg$"],"sources":["/Users/prashantagrawal/Documents/FOOD-DTI/FOOD-MINE-DTI/Frontend/src/pages/UserEdit/UserEditPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { getById, updateUser } from '../../services/userService';\nimport { useParams } from 'react-router-dom';\nimport classes from './userEdit.module.css';\nimport Title from '../../components/Title/Title';\nimport Input from '../../components/Input/Input';\nimport { EMAIL } from '../../constants/patterns';\nimport Button from '../../components/Button/Button';\n\nexport default function UserEditPage() {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const { userId } = useParams();\n  const isEditMode = Boolean(userId);\n\n  useEffect(() => {\n    if (isEditMode) loadUser();\n  }, [userId]);\n\n  const loadUser = async () => {\n    const user = await getById(userId);\n    reset(user);\n  };\n\n  const submit = async (userData) => {\n    await updateUser(userData);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <Title title={isEditMode ? 'Edit User' : 'Add User'} />\n        <form onSubmit={handleSubmit(submit)} noValidate>\n          <Input\n            label=\"Name\"\n            {...register('name', { required: 'Name is required', minLength: 3 })}\n            error={errors.name?.message}\n          />\n          <Input\n            label=\"Email\"\n            {...register('email', { required: 'Email is required', pattern: EMAIL })}\n            error={errors.email?.message}\n          />\n          <Input\n            label=\"Address\"\n            {...register('address', { required: 'Address is required', minLength: 5 })}\n            error={errors.address?.message}\n          />\n          <Input\n            label=\"Is Admin\"\n            type=\"checkbox\"\n            {...register('isAdmin')}\n          />\n          <Button type=\"submit\" text={isEditMode ? \"Update User\" : \"Add User\"} />\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}